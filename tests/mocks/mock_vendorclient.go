// Code generated by MockGen. DO NOT EDIT.
// Source: internal/vendorclient/vendorclient.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockVendorClient is a mock of VendorClient interface.
type MockVendorClient struct {
	ctrl     *gomock.Controller
	recorder *MockVendorClientMockRecorder
}

// MockVendorClientMockRecorder is the mock recorder for MockVendorClient.
type MockVendorClientMockRecorder struct {
	mock *MockVendorClient
}

// NewMockVendorClient creates a new mock instance.
func NewMockVendorClient(ctrl *gomock.Controller) *MockVendorClient {
	mock := &MockVendorClient{ctrl: ctrl}
	mock.recorder = &MockVendorClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVendorClient) EXPECT() *MockVendorClientMockRecorder {
	return m.recorder
}

// ValidateToken mocks base method.
func (m *MockVendorClient) ValidateToken(token string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", token)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockVendorClientMockRecorder) ValidateToken(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockVendorClient)(nil).ValidateToken), token)
}
